entity Khatedar(landsys_khatedar) {
    caseFileNo String required unique
    remarks String required unique
    khatedarStatus String
}


entity State(landsys_state) {
    name String required unique
}

entity District(landsys_district) {
    name String required unique
}

entity SubDistrict(landsys_sub_district) {
    name String required
}

entity Village(landsys_village) {
    name String required
}


entity Unit(landsys_unit) {
    name String required
    conversionFactor  Double required
}

entity LandType(landsys_land_type) {
    name String required
    description String required
}

entity Land(landsys_land) {
   ulpin String
   khasraNumber String  required
   khatauni String
   area  Double
   landMarketValue  Double
   structuralValue  Double
   horticultureValue  Double
   forestValue  Double
   distanceFromCity String
   totalLandValue Double
}


entity Project(landsys_project) {
    name String required unique
    startDate  LocalDate required
    endDate  LocalDate required
    budget  Double required
    approver1 String
    approver2 String
    approver3 String
}


entity ProjectStatusHistory(landsys_project_status_history) {
    status ProjectStatus
    when  LocalDate
    remarks String
}


entity ProjectLand(landsys_project_land) {
    remarks String
    documents  AnyBlob
    hissaType HissaType
}


entity NotificationTemplate(landsys_notification_template) {
     name String
     templateText String
     defaultUse Boolean
     file  AnyBlob
}

entity PublicNotification(landsys_public_notification) {
    date  LocalDate
    file  AnyBlob
}


entity Bank(landsys_bank) {
    name String  required unique
    code String required unique
}


entity BankBranch(landsys_bank_branch) {
    name String required
    ifsc String required unique
    address String required
}

entity Citizen(landsys_citizen) {
    photo  ImageBlob
    name String required
    address String required
    mobileNumber String
    dob LocalDate
    accountNumber String
    fatherName String required
    spouseName String
    successorName String
    aadhar String required unique
    pan String unique
    aadharImage AnyBlob
    panImage  AnyBlob
    accountNo String unique
    accNoImage  ImageBlob

 }

entity LandCompensation(land_Compensation) {
    hissaType                HissaType required
    area                     Double required
    sharePercentage          Double required
    landMarketValue          Double required
    structuralCompensation   Double
    horticultureCompensation Double
    forestCompensation       Double
    solatiumMoney            Double
    additionalCompensation   Double
	status			 		 CompensationStatus
	orderDate              	 LocalDate
	paymentAmount			 Double
    interestRate             Double
    interestDays             Double
	transactionId			 String
}

entity PaymentAdvice(landsys_Payment_Advice) {
    accountHolderName			String required
    accountHolderBankName       String required
    paymentAmount               Double required
	bankName			 		String required
	accountNumber				String required
	ifscCode			 		String required
	checkNumber			 		String
	micrCode			 		String
	paymentAdviceType			PaymentAdviceType
	referenceNumber		     	UUID
	paymentStatus	 			PaymentStatus required
    hissaType HissaType required
}

entity PaymentAdviceDetails(landsys_payment_advice_details) {
    landOwners	String required
    hissaType HissaType required
}

entity PaymentFile(landsys_payment_file) {
	paymentFileId               Double required
    totalPaymentAmount          Double required
	paymentFileDate           	LocalDate
	paymentStatus	 			PaymentStatus required
    bankName                    String
    ifscCode                    String
    paymentMode PaymentAdviceType 
}

entity PaymentFileRecon(landsys_payment_file_recon) {
	primaryHolderName			String required
    paymentAmount               Double required
	paymentDate              	LocalDate
	utrNumber                   String required
	referenceNumber		     	String unique
	paymentStatus	 			PaymentStatus required
}


entity Survey(landsys_Survey) {
	surveyor          	String required
    hissaType           HissaType required
    sharePercentage     Double required
	area			 	Double required
	landMarketValue  	Double required
    structuralValue   	Double
    horticultureValue 	Double
    forestValue       	Double
	distanceFromCity    Double
    remarks         	String
	status			 	SurveyStatus
}

entity NoticeStatusInfo(landsys_notice_status) {
	status			 	NoticeStatus
}

entity TransactionHistory(landsys_transaction_history)
{
    projectName String required
    khasraNumber String required
    state String required
    citizenName String required
    citizenAadhar String required
    surveyerName String
    landValue String required
    paymentAmount Double
    accountNumber String
    bankName String
    transactionId String
    transactionType String
    eventType String
    eventStatus EventStatus
    approver1 String
    approver2 String
    approver3 String
}

relationship OneToOne {
    PaymentAdvice{khatedar required} to Khatedar{paymentAdvice}
    Survey{projectLand required} to ProjectLand{survey}
    LandCompensation{projectLand required} to  ProjectLand{landCompensation}
    PaymentFileRecon{paymentAdvice required} to PaymentAdvice{paymentFileRecon}
    LandCompensation{survey required} to Survey{landCompensation}
    PaymentFile{khatedar required} to Khatedar{paymentFile}
    PaymentFile{paymentAdvice required} to PaymentAdvice{paymentFile}
    }

relationship ManyToOne {
    ProjectLand{land(khasraNumber) required } to Land{projectLand}
    ProjectLand{project(name) required} to Project{projectLand}
    Land{village(name) required} to Village{land(khasraNumber)}
	Land{unit(name) required} to  Unit{land(khasraNumber)}
	Land{LandType(name) required} to LandType{land(khasraNumber)}
    SubDistrict{district(name) required} to District{subDistrict}
	BankBranch{bank(name) required} to Bank{bankBranch}
	District{state(name) required} to State{district(name)}
    Village{subDistrict(name) required} to SubDistrict{village}
    Citizen{bankBranch(name)}  to BankBranch{citizen}
    Land{state(name) required} to State{land(khasraNumber)}
    PaymentAdvice{landCompensation required} to LandCompensation{paymentAdvice}
    PaymentAdvice{projectLand required} to ProjectLand{paymentAdvice}
    PaymentAdvice{survey required} to Survey{paymentAdvice}
    PaymentAdviceDetails{paymentAdvice required} to PaymentAdvice{paymentAdviceDetails}
    PaymentAdviceDetails{projectLand required} to ProjectLand{paymentAdviceDetails}
	ProjectLand{noticeStatusInfo} to NoticeStatusInfo{projectLand}
    PaymentAdvice{projectLand required} to ProjectLand{paymentAdvice}    
    PaymentFile{projectLand required} to ProjectLand{paymentFile}
    PaymentFile{survey required} to Survey{paymentFile}
    PaymentFile{bank(name) required} to Bank{paymentFile}
    PaymentFile{bankBranch(name) required} to BankBranch{paymentFile}
    PaymentFile{landCompensation required} to LandCompensation{paymentFile}
    Khatedar{projectLand required} to ProjectLand{khatedar}
    Khatedar{citizen required} to Citizen{khatedar}

}

enum KhatedarStatus {
    NEW
    SURVEY_CREATED    
}

enum EventStatus {
	NEW
	OPEN
    IN_PROGRESS
	PENDING
    COMPLETED
	SENT
	ACCEPTED
	APPROVED
	PAID
	PENDING_FOR_SURVEY,
    SURVEY_CREATED,
    PENDING_FOR_COMPENSATION,
    COMPENSATION_CREATED,
    PENDING_FOR_PAYMENT,
    PAYMENT_DONE,
    CLOSED
}

enum ProjectStatus {
    NEW
    INPROGRESS
    COMPLETED
}

enum NoticeStatus {
  SENT
  ACCEPTED
}

enum PaymentStatus {
  PENDING
  APPROVED
  PAID
}
enum SurveyStatus
{
  OPEN
  CLOSED
}
enum CompensationStatus
{
  OPEN
  CLOSED
}

enum PaymentAdviceType
{
  ONLINE
  CHECQUE
  OTHER
}

enum HissaType {
    SINGLE_OWNER("Single Owner")
    JOINT_OWNER("Joint Owner")
    DIVIDED("divided")
}

paginate * with pagination
service all with serviceImpl
dto all with mapstruct

filter Citizen , Khatedar , Survey , LandCompensation , Project , PaymentFileRecon, NoticeStatusInfo, PaymentAdvice , TransactionHistory, PaymentFile , PaymentAdviceDetails
